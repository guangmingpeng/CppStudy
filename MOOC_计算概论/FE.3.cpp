//
//  FE.3.cpp
//  计算概论
//
//  Created by 李喆 on 13-12-25.
//  Copyright (c) 2013年 李喆. All rights reserved.
//
//=====
//3 : 招聘会人数
//=====
//总时间限制:
//1000ms
//内存限制:
//65536kB
//描述
//某招聘机构举办招聘活动，事先不知道参会的确切人数。为了今后类似的招聘活动选择适当大小的场馆，招聘机构拟对每位参会人的进出场馆时间进行记录。设第i 个人进入会场的时间和离开会场的时间分别是xi, yi，那么，这个人在招聘会场的时间段t满足 xi <= t < yi。为简便起见，进出时间点用整数表示，且满足 0 <= xi < yi < 1000。请统计，在这一天的招聘活动中，参会的总人数有多少；高峰时，最多有多少人同时在场。
//
//输入
//数据包括2行，这2行的数据个数相同：
//第1行表示第i个人的到达时间xi，数之间用逗号间隔；
//后1行表示第i个人的对应的离开时间yi，数之间也用逗号间隔。
//例如：
//2,5,4,6,7,3,1,6,2
//5,6,7,7,8,4,3,9,4
//
//表示有9个人，进出场的时间分别是：
//[2,5),[5,6),[4,7),[6,7),[7,8),[3,4),[1,3),[6,9),[2,4)
// 输出
// 参加会议的总人数以及最多有多少人同时在场，两者之间以空格间隔。
// 上面例子中，参加会议的总人数为9人，最多的时候有3人同时在场。如，时间段：[2,5),[1,3),[2,4)
//
//  样例输入
//  2,5,4,6,7,3,1,6,2
//  5,6,7,7,8,4,3,9,4
//  样例输出
//  9 3
//  提示
//  总人数不超过1000人。


#include <iostream>
#include <cstring>
using namespace std;

int main() {
    int in[1001]={0};
    int out[1001]={0};
    int count[1001]={0};
    int k=0,max=0;

    char sep=',';
    int i=0;
    while (sep==',') {
        cin >> in[i];
        i++;
        sep=cin.get();
    }
    i=0;
    sep=',';
    while (sep==',') {
        cin >> out[i];
        i++;
        sep=cin.get();
        
    }
    
    for (int i=0; i<1001; i++) {
        if (in[i]<out[i]) {
            k++;
            for (int m=in[i]; m<out[i]; m++) {
                count[m]++;
            }
        }
    }
    for (int i=0; i<1001; i++) {
        if (max<count[i]) {
            max=count[i];
        }
    }
    cout << k << ' ' << max << endl;
    return 0;
}


